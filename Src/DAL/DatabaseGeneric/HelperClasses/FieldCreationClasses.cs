//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.11.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace TournamentCalendarDAL.HelperClasses
{
	/// <summary>Field Creation Class for entity CalendarEntity</summary>
	public partial class CalendarFields
	{
		/// <summary>Creates a new CalendarEntity.ApprovedOn field instance</summary>
		public static EntityField2 ApprovedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.ApprovedOn); }}
		/// <summary>Creates a new CalendarEntity.AttachmentFile field instance</summary>
		public static EntityField2 AttachmentFile { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.AttachmentFile); }}
		/// <summary>Creates a new CalendarEntity.Bond field instance</summary>
		public static EntityField2 Bond { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Bond); }}
		/// <summary>Creates a new CalendarEntity.City field instance</summary>
		public static EntityField2 City { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.City); }}
		/// <summary>Creates a new CalendarEntity.ClosingDate field instance</summary>
		public static EntityField2 ClosingDate { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.ClosingDate); }}
		/// <summary>Creates a new CalendarEntity.ContactAddress field instance</summary>
		public static EntityField2 ContactAddress { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.ContactAddress); }}
		/// <summary>Creates a new CalendarEntity.CountryId field instance</summary>
		public static EntityField2 CountryId { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.CountryId); }}
		/// <summary>Creates a new CalendarEntity.CreatedByUser field instance</summary>
		public static EntityField2 CreatedByUser { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.CreatedByUser); }}
		/// <summary>Creates a new CalendarEntity.CreatedOn field instance</summary>
		public static EntityField2 CreatedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.CreatedOn); }}
		/// <summary>Creates a new CalendarEntity.DateFrom field instance</summary>
		public static EntityField2 DateFrom { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.DateFrom); }}
		/// <summary>Creates a new CalendarEntity.DateTo field instance</summary>
		public static EntityField2 DateTo { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.DateTo); }}
		/// <summary>Creates a new CalendarEntity.DeletedOn field instance</summary>
		public static EntityField2 DeletedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.DeletedOn); }}
		/// <summary>Creates a new CalendarEntity.Email field instance</summary>
		public static EntityField2 Email { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Email); }}
		/// <summary>Creates a new CalendarEntity.EntryFee field instance</summary>
		public static EntityField2 EntryFee { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.EntryFee); }}
		/// <summary>Creates a new CalendarEntity.Guid field instance</summary>
		public static EntityField2 Guid { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Guid); }}
		/// <summary>Creates a new CalendarEntity.Id field instance</summary>
		public static EntityField2 Id { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Id); }}
		/// <summary>Creates a new CalendarEntity.Info field instance</summary>
		public static EntityField2 Info { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Info); }}
		/// <summary>Creates a new CalendarEntity.IsMinPlayersFemale field instance</summary>
		public static EntityField2 IsMinPlayersFemale { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.IsMinPlayersFemale); }}
		/// <summary>Creates a new CalendarEntity.IsMinPlayersMale field instance</summary>
		public static EntityField2 IsMinPlayersMale { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.IsMinPlayersMale); }}
		/// <summary>Creates a new CalendarEntity.Latitude field instance</summary>
		public static EntityField2 Latitude { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Latitude); }}
		/// <summary>Creates a new CalendarEntity.Longitude field instance</summary>
		public static EntityField2 Longitude { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Longitude); }}
		/// <summary>Creates a new CalendarEntity.ModifiedOn field instance</summary>
		public static EntityField2 ModifiedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.ModifiedOn); }}
		/// <summary>Creates a new CalendarEntity.NumOfTeams field instance</summary>
		public static EntityField2 NumOfTeams { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.NumOfTeams); }}
		/// <summary>Creates a new CalendarEntity.NumPlayersFemale field instance</summary>
		public static EntityField2 NumPlayersFemale { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.NumPlayersFemale); }}
		/// <summary>Creates a new CalendarEntity.NumPlayersMale field instance</summary>
		public static EntityField2 NumPlayersMale { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.NumPlayersMale); }}
		/// <summary>Creates a new CalendarEntity.Organizer field instance</summary>
		public static EntityField2 Organizer { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Organizer); }}
		/// <summary>Creates a new CalendarEntity.PlayingAbilityFrom field instance</summary>
		public static EntityField2 PlayingAbilityFrom { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.PlayingAbilityFrom); }}
		/// <summary>Creates a new CalendarEntity.PlayingAbilityTo field instance</summary>
		public static EntityField2 PlayingAbilityTo { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.PlayingAbilityTo); }}
		/// <summary>Creates a new CalendarEntity.PostalCode field instance</summary>
		public static EntityField2 PostalCode { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.PostalCode); }}
		/// <summary>Creates a new CalendarEntity.PostedByEmail field instance</summary>
		public static EntityField2 PostedByEmail { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.PostedByEmail); }}
		/// <summary>Creates a new CalendarEntity.PostedByName field instance</summary>
		public static EntityField2 PostedByName { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.PostedByName); }}
		/// <summary>Creates a new CalendarEntity.PostedByPassword field instance</summary>
		public static EntityField2 PostedByPassword { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.PostedByPassword); }}
		/// <summary>Creates a new CalendarEntity.Special field instance</summary>
		public static EntityField2 Special { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Special); }}
		/// <summary>Creates a new CalendarEntity.Street field instance</summary>
		public static EntityField2 Street { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Street); }}
		/// <summary>Creates a new CalendarEntity.Surface field instance</summary>
		public static EntityField2 Surface { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Surface); }}
		/// <summary>Creates a new CalendarEntity.TournamentName field instance</summary>
		public static EntityField2 TournamentName { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.TournamentName); }}
		/// <summary>Creates a new CalendarEntity.Venue field instance</summary>
		public static EntityField2 Venue { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Venue); }}
		/// <summary>Creates a new CalendarEntity.Website field instance</summary>
		public static EntityField2 Website { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CalendarFieldIndex.Website); }}
	}

	/// <summary>Field Creation Class for entity CountryEntity</summary>
	public partial class CountryFields
	{
		/// <summary>Creates a new CountryEntity.CreatedOn field instance</summary>
		public static EntityField2 CreatedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CountryFieldIndex.CreatedOn); }}
		/// <summary>Creates a new CountryEntity.Id field instance</summary>
		public static EntityField2 Id { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CountryFieldIndex.Id); }}
		/// <summary>Creates a new CountryEntity.Iso3 field instance</summary>
		public static EntityField2 Iso3 { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CountryFieldIndex.Iso3); }}
		/// <summary>Creates a new CountryEntity.ModifiedOn field instance</summary>
		public static EntityField2 ModifiedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CountryFieldIndex.ModifiedOn); }}
		/// <summary>Creates a new CountryEntity.Name field instance</summary>
		public static EntityField2 Name { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CountryFieldIndex.Name); }}
		/// <summary>Creates a new CountryEntity.NameEn field instance</summary>
		public static EntityField2 NameEn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(CountryFieldIndex.NameEn); }}
	}

	/// <summary>Field Creation Class for entity InfoServiceEntity</summary>
	public partial class InfoServiceFields
	{
		/// <summary>Creates a new InfoServiceEntity.City field instance</summary>
		public static EntityField2 City { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.City); }}
		/// <summary>Creates a new InfoServiceEntity.Comments field instance</summary>
		public static EntityField2 Comments { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.Comments); }}
		/// <summary>Creates a new InfoServiceEntity.ConfirmedOn field instance</summary>
		public static EntityField2 ConfirmedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.ConfirmedOn); }}
		/// <summary>Creates a new InfoServiceEntity.CountryId field instance</summary>
		public static EntityField2 CountryId { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.CountryId); }}
		/// <summary>Creates a new InfoServiceEntity.Email field instance</summary>
		public static EntityField2 Email { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.Email); }}
		/// <summary>Creates a new InfoServiceEntity.FirstName field instance</summary>
		public static EntityField2 FirstName { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.FirstName); }}
		/// <summary>Creates a new InfoServiceEntity.Gender field instance</summary>
		public static EntityField2 Gender { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.Gender); }}
		/// <summary>Creates a new InfoServiceEntity.Guid field instance</summary>
		public static EntityField2 Guid { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.Guid); }}
		/// <summary>Creates a new InfoServiceEntity.Id field instance</summary>
		public static EntityField2 Id { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.Id); }}
		/// <summary>Creates a new InfoServiceEntity.LastName field instance</summary>
		public static EntityField2 LastName { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.LastName); }}
		/// <summary>Creates a new InfoServiceEntity.Latitude field instance</summary>
		public static EntityField2 Latitude { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.Latitude); }}
		/// <summary>Creates a new InfoServiceEntity.Longitude field instance</summary>
		public static EntityField2 Longitude { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.Longitude); }}
		/// <summary>Creates a new InfoServiceEntity.MaxDistance field instance</summary>
		public static EntityField2 MaxDistance { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.MaxDistance); }}
		/// <summary>Creates a new InfoServiceEntity.ModifiedOn field instance</summary>
		public static EntityField2 ModifiedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.ModifiedOn); }}
		/// <summary>Creates a new InfoServiceEntity.Street field instance</summary>
		public static EntityField2 Street { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.Street); }}
		/// <summary>Creates a new InfoServiceEntity.SubscribedOn field instance</summary>
		public static EntityField2 SubscribedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.SubscribedOn); }}
		/// <summary>Creates a new InfoServiceEntity.Title field instance</summary>
		public static EntityField2 Title { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.Title); }}
		/// <summary>Creates a new InfoServiceEntity.UserName field instance</summary>
		public static EntityField2 UserName { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.UserName); }}
		/// <summary>Creates a new InfoServiceEntity.UserPassword field instance</summary>
		public static EntityField2 UserPassword { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.UserPassword); }}
		/// <summary>Creates a new InfoServiceEntity.ZipCode field instance</summary>
		public static EntityField2 ZipCode { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(InfoServiceFieldIndex.ZipCode); }}
	}

	/// <summary>Field Creation Class for entity PlayingAbilityEntity</summary>
	public partial class PlayingAbilityFields
	{
		/// <summary>Creates a new PlayingAbilityEntity.CreatedOn field instance</summary>
		public static EntityField2 CreatedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(PlayingAbilityFieldIndex.CreatedOn); }}
		/// <summary>Creates a new PlayingAbilityEntity.Description field instance</summary>
		public static EntityField2 Description { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(PlayingAbilityFieldIndex.Description); }}
		/// <summary>Creates a new PlayingAbilityEntity.Id field instance</summary>
		public static EntityField2 Id { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(PlayingAbilityFieldIndex.Id); }}
		/// <summary>Creates a new PlayingAbilityEntity.ModifiedOn field instance</summary>
		public static EntityField2 ModifiedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(PlayingAbilityFieldIndex.ModifiedOn); }}
		/// <summary>Creates a new PlayingAbilityEntity.Strength field instance</summary>
		public static EntityField2 Strength { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(PlayingAbilityFieldIndex.Strength); }}
	}

	/// <summary>Field Creation Class for entity SentNewsletterEntity</summary>
	public partial class SentNewsletterFields
	{
		/// <summary>Creates a new SentNewsletterEntity.CompletedOn field instance</summary>
		public static EntityField2 CompletedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(SentNewsletterFieldIndex.CompletedOn); }}
		/// <summary>Creates a new SentNewsletterEntity.Id field instance</summary>
		public static EntityField2 Id { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(SentNewsletterFieldIndex.Id); }}
		/// <summary>Creates a new SentNewsletterEntity.NumOfRecipients field instance</summary>
		public static EntityField2 NumOfRecipients { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(SentNewsletterFieldIndex.NumOfRecipients); }}
		/// <summary>Creates a new SentNewsletterEntity.NumOfTournaments field instance</summary>
		public static EntityField2 NumOfTournaments { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(SentNewsletterFieldIndex.NumOfTournaments); }}
		/// <summary>Creates a new SentNewsletterEntity.StartedOn field instance</summary>
		public static EntityField2 StartedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(SentNewsletterFieldIndex.StartedOn); }}
	}

	/// <summary>Field Creation Class for entity SurfaceEntity</summary>
	public partial class SurfaceFields
	{
		/// <summary>Creates a new SurfaceEntity.Id field instance</summary>
		public static EntityField2 Id { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(SurfaceFieldIndex.Id); }}
		/// <summary>Creates a new SurfaceEntity.Description field instance</summary>
		public static EntityField2 Description { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(SurfaceFieldIndex.Description); }}
		/// <summary>Creates a new SurfaceEntity.CreatedOn field instance</summary>
		public static EntityField2 CreatedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(SurfaceFieldIndex.CreatedOn); }}
		/// <summary>Creates a new SurfaceEntity.ModifiedOn field instance</summary>
		public static EntityField2 ModifiedOn { get { return ModelInfoProviderSingleton.GetInstance().CreateField2(SurfaceFieldIndex.ModifiedOn); }}
	}
	

}